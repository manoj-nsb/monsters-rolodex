{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","filter","toLowerCase","includes","searchField","map","SearchBox","placeHolder","handler","type","placeholder","onChange","App","handleChange","e","setState","searchFiled","target","value","state","fetch","then","response","json","users","this","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,G,kBAAO,SAACC,GAEjB,OAAQ,sBAAKC,UAAU,iBAAf,UACJ,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,4BAAIN,EAAMI,QAAQG,aCJbC,EAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,QAAO,SAAAN,GAAO,OAAGA,EAAQE,KAAKK,cAAcC,SAASZ,EAAMa,gBAAgBC,KAAI,SAAAV,GAAO,OAAG,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQC,UCFvHU,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,QAAd,OACpB,uBACChB,UAAU,SACViB,KAAK,SACLC,YAAaH,EACbI,SAAUH,MC+BAI,E,kDAjCb,aAAe,IAAD,8BACZ,gBASFC,aAAa,SAACC,GACZ,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SATtC,EAAKC,MAAQ,CACXnB,SAAU,GACVgB,YAAa,IAJH,E,gEAcO,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAW,EAAKT,SAAS,CAAEf,SAAUwB,S,+BAI7C,OACE,sBAAKhC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWe,YAAY,iBAAiBC,QAASiB,KAAKZ,eACtD,cAAC,EAAD,CAAUb,SAAUyB,KAAKN,MAAMnB,SAAUI,YAAaqB,KAAKN,MAAMH,qB,GA3BvDU,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e7fbc309.chunk.js","sourcesContent":["import React from 'react'\nimport './card.styles.css'\nexport const Card = (props) => {\n\n    return (<div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\n        <h1 > {props.monster.name} </h1>\n        <p>{props.monster.email}</p>\n    </div>)\n        ;\n\n}","import React from 'react';\nimport './card-list.styles.css';\nimport {Card} from '../card/card.component'\nexport const CardList = (props) => {\n    return (<div className=\"card-list\">\n        { props.monsters.filter(monster=> monster.name.toLowerCase().includes(props.searchField)  ).map(monster=>(<Card key={monster.id} monster={ monster} />   ))  }\n        \n        </div>)\n}","import React from 'react'\nimport './search-box.styles.css'\n\nexport const  SearchBox=({placeHolder,handler})=>(\n    <input\n     className=\"search\"\n     type=\"search\" \n     placeholder={placeHolder}\n     onChange={handler} />\n\n);\n\n","import './App.css';\nimport { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      monsters: [],\n      searchFiled: ''\n    }\n   // this.handleChange=this.handleChange.bind(this)\n  }\n\n\n  handleChange=(e)=> {\n    this.setState({ searchFiled: e.target.value })\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => { this.setState({ monsters: users }) });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeHolder=\"search monster\" handler={this.handleChange} />\n        <CardList monsters={this.state.monsters} searchField={this.state.searchFiled} />\n      </div>\n    );\n  }\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}